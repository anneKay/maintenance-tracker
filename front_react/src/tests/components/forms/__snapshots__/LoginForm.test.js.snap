// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[` Login Form component rendering Should render properly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <UserForm
    error="unauthorized"
    history={Object {}}
    onSubmit={[Function]}
    submit={[MockFunction]}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <main>
        <Message
          negative={true}
        >
          unauthorized
        </Message>
        <Form
          as="form"
          onSubmit={[Function]}
        >
          <FormField
            error={true}
          >
            <label
              htmlFor="email"
            >
              Email:
              <input
                id="email"
                name="email"
                onChange={[Function]}
                placeholder="Enter email address"
                required={true}
                type="text"
                value=""
              />
            </label>
            <Label
              color="red"
              pointing={true}
            >
              invalid email
            </Label>
          </FormField>
          <FormField
            error={false}
          >
            <label
              htmlFor="password"
            >
              Password:
              <input
                id="password"
                name="password"
                onChange={[Function]}
                placeholder="Enter your password"
                required={true}
                type="password"
                value=""
              />
            </label>
          </FormField>
          <input
            type="submit"
            value="Login"
          />
        </Form>
        <div
          className="signup"
        >
          <h3>
            New to Maintenance Tracker? 
            <Link
              replace={false}
              to="/signup"
            >
              Sign Up
            </Link>
          </h3>
        </div>
      </main>,
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <Message
            negative={true}
          >
            unauthorized
          </Message>,
          <Form
            as="form"
            onSubmit={[Function]}
          >
            <FormField
              error={true}
            >
              <label
                htmlFor="email"
              >
                Email:
                <input
                  id="email"
                  name="email"
                  onChange={[Function]}
                  placeholder="Enter email address"
                  required={true}
                  type="text"
                  value=""
                />
              </label>
              <Label
                color="red"
                pointing={true}
              >
                invalid email
              </Label>
            </FormField>
            <FormField
              error={false}
            >
              <label
                htmlFor="password"
              >
                Password:
                <input
                  id="password"
                  name="password"
                  onChange={[Function]}
                  placeholder="Enter your password"
                  required={true}
                  type="password"
                  value=""
                />
              </label>
            </FormField>
            <input
              type="submit"
              value="Login"
            />
          </Form>,
          <div
            className="signup"
          >
            <h3>
              New to Maintenance Tracker? 
              <Link
                replace={false}
                to="/signup"
              >
                Sign Up
              </Link>
            </h3>
          </div>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": "unauthorized",
            "negative": true,
          },
          "ref": null,
          "rendered": "unauthorized",
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "as": "form",
            "children": Array [
              <FormField
                error={true}
              >
                <label
                  htmlFor="email"
                >
                  Email:
                  <input
                    id="email"
                    name="email"
                    onChange={[Function]}
                    placeholder="Enter email address"
                    required={true}
                    type="text"
                    value=""
                  />
                </label>
                <Label
                  color="red"
                  pointing={true}
                >
                  invalid email
                </Label>
              </FormField>,
              <FormField
                error={false}
              >
                <label
                  htmlFor="password"
                >
                  Password:
                  <input
                    id="password"
                    name="password"
                    onChange={[Function]}
                    placeholder="Enter your password"
                    required={true}
                    type="password"
                    value=""
                  />
                </label>
              </FormField>,
              <input
                type="submit"
                value="Login"
              />,
            ],
            "onSubmit": [Function],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "children": Array [
                  <label
                    htmlFor="email"
                  >
                    Email:
                    <input
                      id="email"
                      name="email"
                      onChange={[Function]}
                      placeholder="Enter email address"
                      required={true}
                      type="text"
                      value=""
                    />
                  </label>,
                  <Label
                    color="red"
                    pointing={true}
                  >
                    invalid email
                  </Label>,
                ],
                "error": true,
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": Array [
                      "Email:",
                      <input
                        id="email"
                        name="email"
                        onChange={[Function]}
                        placeholder="Enter email address"
                        required={true}
                        type="text"
                        value=""
                      />,
                    ],
                    "htmlFor": "email",
                  },
                  "ref": null,
                  "rendered": Array [
                    "Email:",
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "defaultValue": undefined,
                        "id": "email",
                        "name": "email",
                        "onChange": [Function],
                        "placeholder": "Enter email address",
                        "required": true,
                        "type": "text",
                        "value": "",
                      },
                      "ref": null,
                      "rendered": null,
                      "type": "input",
                    },
                  ],
                  "type": "label",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": "invalid email",
                    "color": "red",
                    "pointing": true,
                  },
                  "ref": null,
                  "rendered": "invalid email",
                  "type": [Function],
                },
              ],
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "children": Array [
                  <label
                    htmlFor="password"
                  >
                    Password:
                    <input
                      id="password"
                      name="password"
                      onChange={[Function]}
                      placeholder="Enter your password"
                      required={true}
                      type="password"
                      value=""
                    />
                  </label>,
                  undefined,
                ],
                "error": false,
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": Array [
                      "Password:",
                      <input
                        id="password"
                        name="password"
                        onChange={[Function]}
                        placeholder="Enter your password"
                        required={true}
                        type="password"
                        value=""
                      />,
                    ],
                    "htmlFor": "password",
                  },
                  "ref": null,
                  "rendered": Array [
                    "Password:",
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "defaultValue": undefined,
                        "id": "password",
                        "name": "password",
                        "onChange": [Function],
                        "placeholder": "Enter your password",
                        "required": true,
                        "type": "password",
                        "value": "",
                      },
                      "ref": null,
                      "rendered": null,
                      "type": "input",
                    },
                  ],
                  "type": "label",
                },
                undefined,
              ],
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "type": "submit",
                "value": "Login",
              },
              "ref": null,
              "rendered": null,
              "type": "input",
            },
          ],
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <h3>
              New to Maintenance Tracker? 
              <Link
                replace={false}
                to="/signup"
              >
                Sign Up
              </Link>
            </h3>,
            "className": "signup",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                "New to Maintenance Tracker? ",
                <Link
                  replace={false}
                  to="/signup"
                >
                  Sign Up
                </Link>,
              ],
            },
            "ref": null,
            "rendered": Array [
              "New to Maintenance Tracker? ",
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": "Sign Up",
                  "replace": false,
                  "to": "/signup",
                },
                "ref": null,
                "rendered": "Sign Up",
                "type": [Function],
              },
            ],
            "type": "h3",
          },
          "type": "div",
        },
      ],
      "type": "main",
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <main>
          <Message
            negative={true}
          >
            unauthorized
          </Message>
          <Form
            as="form"
            onSubmit={[Function]}
          >
            <FormField
              error={true}
            >
              <label
                htmlFor="email"
              >
                Email:
                <input
                  id="email"
                  name="email"
                  onChange={[Function]}
                  placeholder="Enter email address"
                  required={true}
                  type="text"
                  value=""
                />
              </label>
              <Label
                color="red"
                pointing={true}
              >
                invalid email
              </Label>
            </FormField>
            <FormField
              error={false}
            >
              <label
                htmlFor="password"
              >
                Password:
                <input
                  id="password"
                  name="password"
                  onChange={[Function]}
                  placeholder="Enter your password"
                  required={true}
                  type="password"
                  value=""
                />
              </label>
            </FormField>
            <input
              type="submit"
              value="Login"
            />
          </Form>
          <div
            className="signup"
          >
            <h3>
              New to Maintenance Tracker? 
              <Link
                replace={false}
                to="/signup"
              >
                Sign Up
              </Link>
            </h3>
          </div>
        </main>,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <Message
              negative={true}
            >
              unauthorized
            </Message>,
            <Form
              as="form"
              onSubmit={[Function]}
            >
              <FormField
                error={true}
              >
                <label
                  htmlFor="email"
                >
                  Email:
                  <input
                    id="email"
                    name="email"
                    onChange={[Function]}
                    placeholder="Enter email address"
                    required={true}
                    type="text"
                    value=""
                  />
                </label>
                <Label
                  color="red"
                  pointing={true}
                >
                  invalid email
                </Label>
              </FormField>
              <FormField
                error={false}
              >
                <label
                  htmlFor="password"
                >
                  Password:
                  <input
                    id="password"
                    name="password"
                    onChange={[Function]}
                    placeholder="Enter your password"
                    required={true}
                    type="password"
                    value=""
                  />
                </label>
              </FormField>
              <input
                type="submit"
                value="Login"
              />
            </Form>,
            <div
              className="signup"
            >
              <h3>
                New to Maintenance Tracker? 
                <Link
                  replace={false}
                  to="/signup"
                >
                  Sign Up
                </Link>
              </h3>
            </div>,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": "unauthorized",
              "negative": true,
            },
            "ref": null,
            "rendered": "unauthorized",
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "as": "form",
              "children": Array [
                <FormField
                  error={true}
                >
                  <label
                    htmlFor="email"
                  >
                    Email:
                    <input
                      id="email"
                      name="email"
                      onChange={[Function]}
                      placeholder="Enter email address"
                      required={true}
                      type="text"
                      value=""
                    />
                  </label>
                  <Label
                    color="red"
                    pointing={true}
                  >
                    invalid email
                  </Label>
                </FormField>,
                <FormField
                  error={false}
                >
                  <label
                    htmlFor="password"
                  >
                    Password:
                    <input
                      id="password"
                      name="password"
                      onChange={[Function]}
                      placeholder="Enter your password"
                      required={true}
                      type="password"
                      value=""
                    />
                  </label>
                </FormField>,
                <input
                  type="submit"
                  value="Login"
                />,
              ],
              "onSubmit": [Function],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "children": Array [
                    <label
                      htmlFor="email"
                    >
                      Email:
                      <input
                        id="email"
                        name="email"
                        onChange={[Function]}
                        placeholder="Enter email address"
                        required={true}
                        type="text"
                        value=""
                      />
                    </label>,
                    <Label
                      color="red"
                      pointing={true}
                    >
                      invalid email
                    </Label>,
                  ],
                  "error": true,
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": Array [
                        "Email:",
                        <input
                          id="email"
                          name="email"
                          onChange={[Function]}
                          placeholder="Enter email address"
                          required={true}
                          type="text"
                          value=""
                        />,
                      ],
                      "htmlFor": "email",
                    },
                    "ref": null,
                    "rendered": Array [
                      "Email:",
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "defaultValue": undefined,
                          "id": "email",
                          "name": "email",
                          "onChange": [Function],
                          "placeholder": "Enter email address",
                          "required": true,
                          "type": "text",
                          "value": "",
                        },
                        "ref": null,
                        "rendered": null,
                        "type": "input",
                      },
                    ],
                    "type": "label",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "children": "invalid email",
                      "color": "red",
                      "pointing": true,
                    },
                    "ref": null,
                    "rendered": "invalid email",
                    "type": [Function],
                  },
                ],
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "children": Array [
                    <label
                      htmlFor="password"
                    >
                      Password:
                      <input
                        id="password"
                        name="password"
                        onChange={[Function]}
                        placeholder="Enter your password"
                        required={true}
                        type="password"
                        value=""
                      />
                    </label>,
                    undefined,
                  ],
                  "error": false,
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": Array [
                        "Password:",
                        <input
                          id="password"
                          name="password"
                          onChange={[Function]}
                          placeholder="Enter your password"
                          required={true}
                          type="password"
                          value=""
                        />,
                      ],
                      "htmlFor": "password",
                    },
                    "ref": null,
                    "rendered": Array [
                      "Password:",
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "defaultValue": undefined,
                          "id": "password",
                          "name": "password",
                          "onChange": [Function],
                          "placeholder": "Enter your password",
                          "required": true,
                          "type": "password",
                          "value": "",
                        },
                        "ref": null,
                        "rendered": null,
                        "type": "input",
                      },
                    ],
                    "type": "label",
                  },
                  undefined,
                ],
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "type": "submit",
                  "value": "Login",
                },
                "ref": null,
                "rendered": null,
                "type": "input",
              },
            ],
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <h3>
                New to Maintenance Tracker? 
                <Link
                  replace={false}
                  to="/signup"
                >
                  Sign Up
                </Link>
              </h3>,
              "className": "signup",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  "New to Maintenance Tracker? ",
                  <Link
                    replace={false}
                    to="/signup"
                  >
                    Sign Up
                  </Link>,
                ],
              },
              "ref": null,
              "rendered": Array [
                "New to Maintenance Tracker? ",
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": "Sign Up",
                    "replace": false,
                    "to": "/signup",
                  },
                  "ref": null,
                  "rendered": "Sign Up",
                  "type": [Function],
                },
              ],
              "type": "h3",
            },
            "type": "div",
          },
        ],
        "type": "main",
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
